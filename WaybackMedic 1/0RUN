==Instructions==

1. Make a list of uniq articles touched by a user across a date range and save to a ".auth" file
   in the meta directory. eg:
   
    ./ucon -n "Cyberbot II" -s "20151231" -e "20160304" > meta/cb20151231-20160304.auth

   -n <name> can be any Wikipedia username.

   The above filename cb20151231-20160304.auth is significant. The "cb" tells us this is for 
   articles edited by Cyberbot. The "20151231-20160304" is the date range. The ".auth" 
   signifies the type of data in the file (a list of articles edited by a certain author). 

   The above typically only needs to be done one time before running WaybackMedic. The following 
   steps break the list down into smaller batch runs. These steps can be automated in a future
   revision of the bot.

___________________________________________________________________________________________________

1. Create a new project and its files

    ./project -c -p cb20151231-20160304.0001-1000

  The "-p" defines a new project name. In this case we are using the name created above, along with
  an extension ".0001-1000" -- this means the project is for the first 1000 articles. 

2. Run medic in parallel                 

     parallel -a meta/cb20151231-20160304.0001-1000/auth -r --delay 2 --trim lr -k -j 2 ./driver -p cb20151231-20160304.0001-1000 -n {}

   Here we are running GNU Parallel to process the 1000 names of the project id cb20151231-20160304.0001-1000
   "-j 2" tells how many processes to run at one time. My 4-CPU i7 can handle 20+ for example. 
   Cut and paste the above line, replace "cb20151231-20160304.0001-1000" with your project name.

2.1 Create the index file

     ./project -j -p cb20151231-20160304.0001-1000
     mv meta/cb20151231-20160304.0001-1000/index.temp meta/cb20151231-20160304.0001-1000/index.temp.old

   * Backup files

     cd meta/cb20151231-20160304.0001-1000
     cp index index.temp.run1 ; mkdir run1 ; cp * run1

2.2 View diff's of results, re-run medic for individual articles if needed

   View the proposed article diffs to verify it is working before uploading to Wikipedia 

   1. ./bug -n "Charles Dickens" -d c
      (or "-d p" for uncolored plain text diff if wdiff is not installed)

   2. ./bug -n "Charles Dickens" -v
      (to view data file locations and the command to re-run medic for that name)

3. Re-run critical, A1 and redirect cases (must be run using tcsh shell)

   cd ~/wm
   mv redirects meta/cb20151231-20160304.0001-1000
   cd meta/cb20151231-20160304.0001-1000
   awk -F" : #" '{s = $2;gsub(/[Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt][ ]{0,}\[\[/,"",s); p = substr(s, 1, length(s) - 1); if(p ~ "#") print substr(p, 1, index(p, "#") - 1); else print p}' redirects > auth.critical
   awk -F" : #" '{s = $1; gsub(/\(|\)|\?|\*/,"\\\\&", s); gsub(/'"'"'/, "'"'"'\"'"'"'\"'"'"'", s ); printf("grep -Ev %c^%s%c auth > o ; mv o auth\n",0x27,s,0x27)}' redirects | tcsh
   cat auth.critical >> auth
   awk -F"----" '{print $1}' critical >> auth.critical
   grep " A1" bogusapi | awk -F"----" '{print $1}' >> auth.critical
   awk '\! s[$0]++' auth.critical > o; mv o auth.critical
   cp ~/wm/deletename* .
   ./deletenamewrapper critical 

   # Re-run using auth.critical as input
   cd ~/wm
   parallel -a meta/cb20151231-20160304.0001-1000/auth.critical -r --delay 2 --trim lr -k -j 2 ./driver -p cb20151231-20160304.0001-1000 -n {}
   # Re-assemble index
   ./project -j -p cb20151231-20160304.0001-1000
   cd meta/cb20151231-20160304.0001-1000
   mv index.temp index.temp.critical   


3. Run AWB

     * See AWB setup instructions in 0INSTALL 

3.1 Load and run AWB

   cd meta/cb20151231-20160304.0001-1000
   cp discovered /mnt/ramdisk/discovered.txt
   * load discovered.txt into AWB
   cd ~/wm
   ./demon-lin-wm-auto.awk -p cb20151231-20160304.0001-1000 -d0 
   * Run AWB

3.2 Re-run articles that changed (only need to run if auth.demon exist)
   
   # Delete auth.demon names from log files
   cd meta/cb20151231-20160304.0001-1000
   tcsh deletenamewrapper demon
   # Re-run using auth.demon as input
   mv index.temp index.temp.old
   cd ~/wm
   parallel -a meta/cb20151231-20160304.0001-1000/auth.demon -r --delay 2 --trim lr -k -j 2 ./driver -p cb20151231-20160304.0001-1000 -n {}
   # Re-assemble index
   ./project -j -p cb20151231-20160304.0001-1000
   cd meta/cb20151231-20160304.0001-1000
   mv index.temp index.temp.demonX (1 to X)

3.3 Load and run AWB   

   cp auth.demon /mnt/ramdisk/auth.demon.txt
   mv auth.demon auth.demon.runX (1..X)
   * load list into AWB
   ./demon-lin-wm-auto.awk -p cb20151231-20160304.0001-1000 -d0 
   * Run AWB

4. Repeat step 2->3 if needed (articles that have changed) until no more show up in auth.demon 

5. Create wayrm.sql and newiadate.sql files for sending to Cyberbot

   cd meta/cb20151231-20160304.0001-1000
   rm o; awk '{gsub(/'"'"'/, "'"'"'\"'"'"'\"'"'"'", $0 ); printf("grep %c%s%c wayrm >> o\n", 0x27, $0, 0x27)}' auth | tcsh
   awk '\!s[$0]++' o > wayrm.sql
   rm o; awk '{gsub(/'"'"'/, "'"'"'\"'"'"'\"'"'"'", $0 ); printf("grep %c%s%c newiadate >> o\n", 0x27, $0, 0x27)}' auth | tcsh
   awk '\!s[$0]++' o > newiadate.sql
   cd ~/wm
   ./bug -p cb20151231-20160304.0001-1000 -s > o
   mv o /mnt/ramdisk/cb20151231-20160304.0001-1000


